[package]
edition = "2021"
name = "pico-test-probe"
version = "0.1.0"
license = "MIT OR Apache-2.0"

#add restore-state feature
# [features]
# Enable critical section implementation that does "foo"
# restore-state-bool = ["critical-section/restore-state-bool"]
# restore-state-u8 = ["critical-section/restore-state-u8"]
# restore-state-u32 = ["critical-section/restore-state-bool"]

[dependencies]
embedded-hal = { version = "0.2.5", features = ["unproven"] }
cortex-m = { version = "0.7.6" }
cortex-m-rt = "0.7"
critical-section = "1.1.2"
debounced-pin = "0.3.0"

defmt = "0.3"
defmt-rtt = "0.4"
panic-probe = { version = "0.3", features = ["print-defmt"] }

# We're using a Pico by default on this template
rp-pico = "0.8"

# but you can use any BSP. Uncomment this to use the pro_micro_rp2040 BSP instead
# sparkfun-pro-micro-rp2040 = "0.6"

# If you're not going to use a Board Support Package you'll need these:
# rp2040-hal = { version="0.8", features=["rt", "critical-section-impl"] }
# rp2040-boot2 = "0.2"
# rp2040-hal = { version = "0.9.1", features = ["rt"] }
# panic-halt = "0.2.0"
# rp2040-boot2 = "0.2.1"

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
